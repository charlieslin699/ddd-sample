// Code generated by mockery v2.42.1. DO NOT EDIT.

package i18n

import mock "github.com/stretchr/testify/mock"

// I18N is an autogenerated mock type for the I18N type
type I18N struct {
	mock.Mock
}

type I18N_Expecter struct {
	mock *mock.Mock
}

func (_m *I18N) EXPECT() *I18N_Expecter {
	return &I18N_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: key, locale
func (_m *I18N) Get(key string, locale string) string {
	ret := _m.Called(key, locale)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(key, locale)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// I18N_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type I18N_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - key string
//   - locale string
func (_e *I18N_Expecter) Get(key interface{}, locale interface{}) *I18N_Get_Call {
	return &I18N_Get_Call{Call: _e.mock.On("Get", key, locale)}
}

func (_c *I18N_Get_Call) Run(run func(key string, locale string)) *I18N_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *I18N_Get_Call) Return(value string) *I18N_Get_Call {
	_c.Call.Return(value)
	return _c
}

func (_c *I18N_Get_Call) RunAndReturn(run func(string, string) string) *I18N_Get_Call {
	_c.Call.Return(run)
	return _c
}

// NewI18N creates a new instance of I18N. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewI18N(t interface {
	mock.TestingT
	Cleanup(func())
}) *I18N {
	mock := &I18N{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
